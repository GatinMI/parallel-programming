//// Created by Alexander Leontyev on 22.02.17.//#include <omp.h>#include <stdio.h>int main() {    int a = 1;    int b = 2;    omp_set_num_threads(2);    printf("num_threads = 2\n");    printf("[before parallel block]\n");    printf("a = %d\n", a);    printf("b = %d\n", b);    printf("\n");    printf("[in parallel block]\n");#pragma omp parallel private(a) firstprivate(b)    {        a += omp_get_thread_num();        b += omp_get_thread_num();        printf("thread_num = %d, a = %d\n", omp_get_thread_num(), a);        printf("thread_num = %d, b = %d\n", omp_get_thread_num(), b);    }    printf("\n");    printf("[after parallel block]\n");    printf("a = %d\n", a);    printf("b = %d\n", b);    omp_set_num_threads(4);    printf("\nnum_threads = 4\n");    printf("[before parallel block]\n");    printf("a = %d\n", a);    printf("b = %d\n", b);    printf("\n");    printf("[in parallel block]\n");#pragma omp parallel shared(a) private(b)    {        a -= omp_get_thread_num();        b -= omp_get_thread_num();        printf("thread_num = %d, a = %d\n", omp_get_thread_num(), a);        printf("thread_num = %d, b = %d\n", omp_get_thread_num(), b);    }    printf("\n");    printf("[after parallel block]\n");    printf("a = %d\n", a);    printf("b = %d\n", b);}